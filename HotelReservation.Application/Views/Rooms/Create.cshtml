@model HotelReservation.ViewModels.RoomViewModel

@{
    ViewBag.Title = "Create";
}

<div class="card" style="margin-top: 20px;">
    <div class="card-body">
        <h2 class="card-title">Rooms</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Room</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RoomNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RoomNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.RoomTypeID, new SelectList(Model.RoomTypes, "RoomTypeID", "TypeDescription"), "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoomTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control roomPrice", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Floor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Floor, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @*@Html.LabelFor(model => model.Reserved, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-10">
                        <div class="checkbox">
                            <label asp-for="Reserved">
                                <input asp-for="Reserved" />
                                @Html.DisplayNameFor(m => m.Reserved)
                            </label>
                        </div>
                        @*@Html.CheckBoxFor(model => model.Reserved, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Reserved, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">
        $(function(){
            // select the element and wait for the onchange event
            $("#RoomTypeID").change(function() {

                var t = $(this).val();

                if (t !== "") {
                    // post the id (if given) to the specified route to return the price
                    var reqUrl = "/api/Rooms/GetRoomPrice?roomTypeID=";

                    $.post(reqUrl + t, function (res) {
                        // return price value only when success is true
                        if (res.success === "true") {
                            $("#Price").val(res.data.price);
                        } else {
                            alert("Error getting price of room!");
                        }
                    });
                } else {
                    // if no id value passed keep the price text field empty
                    $("input.roomPrice").val('');
                }

            });
        });

    </script>

}
